# Use oficial Microsoft SQL Server image

FROM mcr.microsoft.com/mssql/server:2022-latest

# Configure external build dependencies
ARG DBNAME = viBankDb
ARG SA_PASSWORD
USER root

RUN apt-get update \
    && apt-get install unzip -y

# Install sql package for linux and make it executable
RUN wget -progress=bar:force -q -O sqlpackage.zip https://go.microsoft.com/fwlink/?linkid=2165213 \
    && unzip -qq sqlpackage.zip -d /opt/sqlpackage \
    && chmod +x /opt/sqlpackage/sqlpackage

FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR ./
COPY  ./dbo/ ./
COPY ./dbo/scripts/post-deployment.sql ./
COPY ./dbo/scripts/seed-data.sql ./
COPY ./SqlDatabase.sqlproj ./
RUN dotnet remove package Microsoft.SqlServer.DacFx
RUN dotnet add package Microsoft.SqlServer.DacFx -v 12.0.2603.2
RUN dotnet build

# Add the DACPAC to the image
#COPY ./bin/Debug/db.dacpac ./

RUN ls -la

USER 1001
# Set environment variables for the SQL Server instance

ENV ACCEPT_EULA=Y
ENV SA_PASSWORD=$SA_PASSWORD

USER root

RUN ( /opt/mssql/bin/sqlservr & ) | grep -q "Service Broker manager has started" \
    && /opt/sqlpackage/sqlpackage /a:Publish /tsn:localhost /tdn:${DBNAME} /tu:sa /tp:$SA_PASSWORD /sf:/db.dacpac \
    && pkill sqlservr \
    && rm -r /opt/sqlpackage


EXPOSE 1433

# Clean Up downloads 
RUN rm -rf sqlpackage.zip

RUN echo $SA_PASSWORD
# Start the SQL Server service when the container starts
CMD ["/opt/mssql/bin/sqlservr"]

